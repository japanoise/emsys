name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [gcc, clang]
        exclude:
          # macOS uses clang by default, skip gcc
          - os: macos-latest
            compiler: gcc

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build with ${{ matrix.compiler }}
      run: make CC=${{ matrix.compiler }}
    
    - name: Run unit tests
      run: make test

  sanitizers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build with AddressSanitizer + UndefinedBehaviorSanitizer (${{ matrix.compiler }})
      run: make clean && make CC=${{ matrix.compiler }} CFLAGS="-fsanitize=address,undefined -g -O1 -fno-omit-frame-pointer" LDFLAGS="-fsanitize=address,undefined"
    
    - name: Test with sanitizers
      run: |
        echo "Testing emsys with sanitizers enabled..."
        ./emsys --version
        echo "Running unit tests with sanitizers..."
        make test

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: cpp
    
    - name: Build for analysis
      run: make
    
    - name: Run CodeQL
      uses: github/codeql-action/analyze@v3